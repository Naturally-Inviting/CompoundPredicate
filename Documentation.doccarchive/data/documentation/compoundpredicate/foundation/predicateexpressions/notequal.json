{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/notequal"]}],"topicSections":[{"generated":true,"identifiers":["doc:\/\/CompoundPredicate\/documentation\/CompoundPredicate\/Foundation\/PredicateExpressions\/NotEqual\/VariableReplacing-Implementations"],"title":"Default Implementations"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"text":"PredicateExpressions","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation20PredicateExpressionsO"},{"kind":"text","text":"."},{"preciseIdentifier":"s:10Foundation20PredicateExpressionsO8NotEqualV","kind":"typeIdentifier","text":"NotEqual"}],"languages":["swift"],"platforms":["macOS"]}]}],"hierarchy":{"paths":[["doc:\/\/CompoundPredicate\/documentation\/CompoundPredicate","doc:\/\/CompoundPredicate\/documentation\/CompoundPredicate\/Foundation","doc:\/\/CompoundPredicate\/documentation\/CompoundPredicate\/Foundation\/PredicateExpressions"]]},"metadata":{"role":"symbol","symbolKind":"extension","title":"PredicateExpressions.NotEqual","modules":[{"relatedModules":["Foundation"],"name":"CompoundPredicate"}],"externalID":"s:e:s:10Foundation20PredicateExpressionsO8NotEqualV08CompoundB0AF17VariableReplacingRzAfGR_rlE9replacing_4withAEy_xq_GAC0G0Vy_qd__G_AMtlF","extendedModule":"Foundation","roleHeading":"Extended Structure","navigatorTitle":[{"kind":"identifier","text":"NotEqual"}],"fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PredicateExpressions","preciseIdentifier":"s:10Foundation20PredicateExpressionsO"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10Foundation20PredicateExpressionsO8NotEqualV","kind":"identifier","text":"NotEqual"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/CompoundPredicate\/documentation\/CompoundPredicate\/Foundation\/PredicateExpressions\/NotEqual"},"schemaVersion":{"major":0,"patch":0,"minor":3},"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/CompoundPredicate\/10Foundation19PredicateExpressionP","doc:\/\/CompoundPredicate\/documentation\/CompoundPredicate\/VariableReplacing"],"kind":"relationships"}],"sections":[],"references":{"doc://CompoundPredicate/documentation/CompoundPredicate/Foundation/PredicateExpressions":{"identifier":"doc:\/\/CompoundPredicate\/documentation\/CompoundPredicate\/Foundation\/PredicateExpressions","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PredicateExpressions"}],"abstract":[],"kind":"symbol","url":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions","type":"topic","title":"PredicateExpressions"},"doc://CompoundPredicate/10Foundation19PredicateExpressionP":{"type":"unresolvable","title":"Foundation.PredicateExpression","identifier":"doc:\/\/CompoundPredicate\/10Foundation19PredicateExpressionP"},"doc://CompoundPredicate/documentation/CompoundPredicate/Foundation/PredicateExpressions/NotEqual/VariableReplacing-Implementations":{"kind":"article","url":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/notequal\/variablereplacing-implementations","type":"topic","title":"VariableReplacing Implementations","role":"collectionGroup","identifier":"doc:\/\/CompoundPredicate\/documentation\/CompoundPredicate\/Foundation\/PredicateExpressions\/NotEqual\/VariableReplacing-Implementations","abstract":[]},"doc://CompoundPredicate/documentation/CompoundPredicate/Foundation/PredicateExpressions/NotEqual":{"abstract":[],"type":"topic","kind":"symbol","title":"PredicateExpressions.NotEqual","role":"symbol","fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:10Foundation20PredicateExpressionsO","kind":"identifier","text":"PredicateExpressions"},{"text":".","kind":"text"},{"kind":"identifier","text":"NotEqual","preciseIdentifier":"s:10Foundation20PredicateExpressionsO8NotEqualV"}],"identifier":"doc:\/\/CompoundPredicate\/documentation\/CompoundPredicate\/Foundation\/PredicateExpressions\/NotEqual","navigatorTitle":[{"text":"NotEqual","kind":"identifier"}],"url":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/notequal"},"doc://CompoundPredicate/documentation/CompoundPredicate/Foundation":{"identifier":"doc:\/\/CompoundPredicate\/documentation\/CompoundPredicate\/Foundation","abstract":[],"role":"collection","kind":"symbol","url":"\/documentation\/compoundpredicate\/foundation","title":"Foundation","type":"topic"},"doc://CompoundPredicate/documentation/CompoundPredicate":{"abstract":[],"url":"\/documentation\/compoundpredicate","title":"CompoundPredicate","type":"topic","kind":"symbol","role":"collection","identifier":"doc:\/\/CompoundPredicate\/documentation\/CompoundPredicate"},"doc://CompoundPredicate/documentation/CompoundPredicate/VariableReplacing":{"kind":"symbol","url":"\/documentation\/compoundpredicate\/variablereplacing","type":"topic","title":"VariableReplacing","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"VariableReplacing"}],"conformance":{"constraints":[{"type":"codeVoice","code":"LHS"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"VariableReplacing"},{"text":", ","type":"text"},{"code":"RHS","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"VariableReplacing"},{"text":", ","type":"text"},{"type":"codeVoice","code":"LHS.Output"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"LHS.Output"},{"type":"text","text":" is "},{"code":"RHS.Output","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/CompoundPredicate\/documentation\/CompoundPredicate\/VariableReplacing","navigatorTitle":[{"text":"VariableReplacing","kind":"identifier"}],"abstract":[{"type":"text","text":"A PredicateExpression that can recursively replace a variable within itself"}]}}}