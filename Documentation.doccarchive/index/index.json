{"interfaceLanguages":{"swift":[{"children":[{"title":"Combining Predicates","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/swift\/array\/conjunction()","title":"func conjunction<T>() -> Predicate<T>","type":"method"},{"path":"\/documentation\/compoundpredicate\/swift\/array\/disjunction()","title":"func disjunction<T>() -> Predicate<T>","type":"method"},{"title":"Custom Predicates","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/variablereplacing\/output","title":"Output","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/compoundpredicate\/variablereplacing\/replacing(_:with:)-22zgg","title":"func replacing<T>(Self.Variable<T>, with: Self.Variable<T>) -> Self","type":"method"}],"title":"VariableReplacing Implementations","type":"groupMarker"}],"path":"\/documentation\/compoundpredicate\/variablereplacing\/replacing(_:with:)-7r9rg","title":"func replacing<T>(Self.Variable<T>, with: Self.Variable<T>) -> Self","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/variablereplacing\/variable","title":"VariableReplacing.Variable","type":"typealias"}],"path":"\/documentation\/compoundpredicate\/variablereplacing","title":"VariableReplacing","type":"protocol"},{"path":"\/documentation\/compoundpredicate\/variablereplacingleaf","title":"VariableReplacingLeaf","type":"protocol"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Types","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/nsnotification\/name\/foundationextensionsruntimewarning","title":"static let foundationExtensionsRuntimeWarning: NSNotification.Name","type":"property"}],"path":"\/documentation\/compoundpredicate\/foundation\/nsnotification\/name","title":"NSNotification.Name","type":"extension"}],"path":"\/documentation\/compoundpredicate\/foundation\/nsnotification","title":"NSNotification","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/arithmetic\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.Arithmetic<LHS, RHS>.Variable<T>, with: PredicateExpressions.Arithmetic<LHS, RHS>.Variable<T>) -> PredicateExpressions.Arithmetic<LHS, RHS>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/arithmetic\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/arithmetic","title":"PredicateExpressions.Arithmetic","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/closedrange\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.ClosedRange<LHS, RHS>.Variable<T>, with: PredicateExpressions.ClosedRange<LHS, RHS>.Variable<T>) -> PredicateExpressions.ClosedRange<LHS, RHS>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/closedrange\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/closedrange","title":"PredicateExpressions.ClosedRange","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/collectioncontainscollection\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.CollectionContainsCollection<Base, Other>.Variable<T>, with: PredicateExpressions.CollectionContainsCollection<Base, Other>.Variable<T>) -> PredicateExpressions.CollectionContainsCollection<Base, Other>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/collectioncontainscollection\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/collectioncontainscollection","title":"PredicateExpressions.CollectionContainsCollection","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/collectionindexsubscript\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.CollectionIndexSubscript<Wrapped, Index>.Variable<T>, with: PredicateExpressions.CollectionIndexSubscript<Wrapped, Index>.Variable<T>) -> PredicateExpressions.CollectionIndexSubscript<Wrapped, Index>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/collectionindexsubscript\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/collectionindexsubscript","title":"PredicateExpressions.CollectionIndexSubscript","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/collectionrangesubscript\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.CollectionRangeSubscript<Wrapped, Range>.Variable<T>, with: PredicateExpressions.CollectionRangeSubscript<Wrapped, Range>.Variable<T>) -> PredicateExpressions.CollectionRangeSubscript<Wrapped, Range>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/collectionrangesubscript\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/collectionrangesubscript","title":"PredicateExpressions.CollectionRangeSubscript","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/comparison\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.Comparison<LHS, RHS>.Variable<T>, with: PredicateExpressions.Comparison<LHS, RHS>.Variable<T>) -> PredicateExpressions.Comparison<LHS, RHS>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/comparison\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/comparison","title":"PredicateExpressions.Comparison","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/conditional\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.Conditional<Test, If, Else>.Variable<T>, with: PredicateExpressions.Conditional<Test, If, Else>.Variable<T>) -> PredicateExpressions.Conditional<Test, If, Else>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/conditional\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/conditional","title":"PredicateExpressions.Conditional","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/conditionalcast\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.ConditionalCast<Input, Desired>.Variable<T>, with: PredicateExpressions.ConditionalCast<Input, Desired>.Variable<T>) -> PredicateExpressions.ConditionalCast<Input, Desired>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/conditionalcast\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/conditionalcast","title":"PredicateExpressions.ConditionalCast","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/conjunction\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.Conjunction<LHS, RHS>.Variable<T>, with: PredicateExpressions.Conjunction<LHS, RHS>.Variable<T>) -> PredicateExpressions.Conjunction<LHS, RHS>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/conjunction\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/conjunction","title":"PredicateExpressions.Conjunction","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/dictionarykeydefaultvaluesubscript\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.DictionaryKeyDefaultValueSubscript<Wrapped, Key, Default>.Variable<T>, with: PredicateExpressions.DictionaryKeyDefaultValueSubscript<Wrapped, Key, Default>.Variable<T>) -> PredicateExpressions.DictionaryKeyDefaultValueSubscript<Wrapped, Key, Default>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/dictionarykeydefaultvaluesubscript\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/dictionarykeydefaultvaluesubscript","title":"PredicateExpressions.DictionaryKeyDefaultValueSubscript","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/dictionarykeysubscript\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.DictionaryKeySubscript<Wrapped, Key, Value>.Variable<T>, with: PredicateExpressions.DictionaryKeySubscript<Wrapped, Key, Value>.Variable<T>) -> PredicateExpressions.DictionaryKeySubscript<Wrapped, Key, Value>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/dictionarykeysubscript\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/dictionarykeysubscript","title":"PredicateExpressions.DictionaryKeySubscript","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/disjunction\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.Disjunction<LHS, RHS>.Variable<T>, with: PredicateExpressions.Disjunction<LHS, RHS>.Variable<T>) -> PredicateExpressions.Disjunction<LHS, RHS>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/disjunction\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/disjunction","title":"PredicateExpressions.Disjunction","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/equal\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.Equal<LHS, RHS>.Variable<T>, with: PredicateExpressions.Equal<LHS, RHS>.Variable<T>) -> PredicateExpressions.Equal<LHS, RHS>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/equal\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/equal","title":"PredicateExpressions.Equal","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/filter\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.Filter<LHS, RHS>.Variable<T>, with: PredicateExpressions.Filter<LHS, RHS>.Variable<T>) -> PredicateExpressions.Filter<LHS, RHS>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/filter\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/filter","title":"PredicateExpressions.Filter","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/floatdivision\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.FloatDivision<LHS, RHS>.Variable<T>, with: PredicateExpressions.FloatDivision<LHS, RHS>.Variable<T>) -> PredicateExpressions.FloatDivision<LHS, RHS>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/floatdivision\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/floatdivision","title":"PredicateExpressions.FloatDivision","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/forcecast\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.ForceCast<Input, Desired>.Variable<T>, with: PredicateExpressions.ForceCast<Input, Desired>.Variable<T>) -> PredicateExpressions.ForceCast<Input, Desired>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/forcecast\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/forcecast","title":"PredicateExpressions.ForceCast","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/forcedunwrap\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.ForcedUnwrap<Inner, Wrapped>.Variable<T>, with: PredicateExpressions.ForcedUnwrap<Inner, Wrapped>.Variable<T>) -> PredicateExpressions.ForcedUnwrap<Inner, Wrapped>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/forcedunwrap\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/forcedunwrap","title":"PredicateExpressions.ForcedUnwrap","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/intdivision\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.IntDivision<LHS, RHS>.Variable<T>, with: PredicateExpressions.IntDivision<LHS, RHS>.Variable<T>) -> PredicateExpressions.IntDivision<LHS, RHS>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/intdivision\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/intdivision","title":"PredicateExpressions.IntDivision","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/intremainder\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.IntRemainder<LHS, RHS>.Variable<T>, with: PredicateExpressions.IntRemainder<LHS, RHS>.Variable<T>) -> PredicateExpressions.IntRemainder<LHS, RHS>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/intremainder\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/intremainder","title":"PredicateExpressions.IntRemainder","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/keypath\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.KeyPath<Root, Output>.Variable<T>, with: PredicateExpressions.KeyPath<Root, Output>.Variable<T>) -> PredicateExpressions.KeyPath<Root, Output>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/keypath\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/keypath","title":"PredicateExpressions.KeyPath","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/negation\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.Negation<Wrapped>.Variable<T>, with: PredicateExpressions.Negation<Wrapped>.Variable<T>) -> PredicateExpressions.Negation<Wrapped>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/negation\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/negation","title":"PredicateExpressions.Negation","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/nilcoalesce\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.NilCoalesce<LHS, RHS>.Variable<T>, with: PredicateExpressions.NilCoalesce<LHS, RHS>.Variable<T>) -> PredicateExpressions.NilCoalesce<LHS, RHS>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/nilcoalesce\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/nilcoalesce","title":"PredicateExpressions.NilCoalesce","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/notequal\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.NotEqual<LHS, RHS>.Variable<T>, with: PredicateExpressions.NotEqual<LHS, RHS>.Variable<T>) -> PredicateExpressions.NotEqual<LHS, RHS>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/notequal\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/notequal","title":"PredicateExpressions.NotEqual","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/optionalflatmap\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.OptionalFlatMap<LHS, Wrapped, RHS, Result>.Variable<T>, with: PredicateExpressions.OptionalFlatMap<LHS, Wrapped, RHS, Result>.Variable<T>) -> PredicateExpressions.OptionalFlatMap<LHS, Wrapped, RHS, Result>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/optionalflatmap\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/optionalflatmap","title":"PredicateExpressions.OptionalFlatMap","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/range\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.Range<LHS, RHS>.Variable<T>, with: PredicateExpressions.Range<LHS, RHS>.Variable<T>) -> PredicateExpressions.Range<LHS, RHS>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/range\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/range","title":"PredicateExpressions.Range","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/rangeexpressioncontains\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.RangeExpressionContains<RangeExpression, Element>.Variable<T>, with: PredicateExpressions.RangeExpressionContains<RangeExpression, Element>.Variable<T>) -> PredicateExpressions.RangeExpressionContains<RangeExpression, Element>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/rangeexpressioncontains\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/rangeexpressioncontains","title":"PredicateExpressions.RangeExpressionContains","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/sequenceallsatisfy\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.SequenceAllSatisfy<LHS, RHS>.Variable<T>, with: PredicateExpressions.SequenceAllSatisfy<LHS, RHS>.Variable<T>) -> PredicateExpressions.SequenceAllSatisfy<LHS, RHS>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/sequenceallsatisfy\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/sequenceallsatisfy","title":"PredicateExpressions.SequenceAllSatisfy","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/sequencecontains\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.SequenceContains<LHS, RHS>.Variable<T>, with: PredicateExpressions.SequenceContains<LHS, RHS>.Variable<T>) -> PredicateExpressions.SequenceContains<LHS, RHS>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/sequencecontains\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/sequencecontains","title":"PredicateExpressions.SequenceContains","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/sequencecontainswhere\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.SequenceContainsWhere<LHS, RHS>.Variable<T>, with: PredicateExpressions.SequenceContainsWhere<LHS, RHS>.Variable<T>) -> PredicateExpressions.SequenceContainsWhere<LHS, RHS>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/sequencecontainswhere\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/sequencecontainswhere","title":"PredicateExpressions.SequenceContainsWhere","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/sequencemaximum\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.SequenceMaximum<Elements>.Variable<T>, with: PredicateExpressions.SequenceMaximum<Elements>.Variable<T>) -> PredicateExpressions.SequenceMaximum<Elements>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/sequencemaximum\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/sequencemaximum","title":"PredicateExpressions.SequenceMaximum","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/sequenceminimum\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.SequenceMinimum<Elements>.Variable<T>, with: PredicateExpressions.SequenceMinimum<Elements>.Variable<T>) -> PredicateExpressions.SequenceMinimum<Elements>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/sequenceminimum\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/sequenceminimum","title":"PredicateExpressions.SequenceMinimum","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/sequencestartswith\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.SequenceStartsWith<Base, Prefix>.Variable<T>, with: PredicateExpressions.SequenceStartsWith<Base, Prefix>.Variable<T>) -> PredicateExpressions.SequenceStartsWith<Base, Prefix>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/sequencestartswith\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/sequencestartswith","title":"PredicateExpressions.SequenceStartsWith","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/stringcaseinsensitivecompare\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.StringCaseInsensitiveCompare<Root, Other>.Variable<T>, with: PredicateExpressions.StringCaseInsensitiveCompare<Root, Other>.Variable<T>) -> PredicateExpressions.StringCaseInsensitiveCompare<Root, Other>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/stringcaseinsensitivecompare\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/stringcaseinsensitivecompare","title":"PredicateExpressions.StringCaseInsensitiveCompare","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/stringlocalizedcompare\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.StringLocalizedCompare<Root, Other>.Variable<T>, with: PredicateExpressions.StringLocalizedCompare<Root, Other>.Variable<T>) -> PredicateExpressions.StringLocalizedCompare<Root, Other>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/stringlocalizedcompare\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/stringlocalizedcompare","title":"PredicateExpressions.StringLocalizedCompare","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/stringlocalizedstandardcontains\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.StringLocalizedStandardContains<Root, Other>.Variable<T>, with: PredicateExpressions.StringLocalizedStandardContains<Root, Other>.Variable<T>) -> PredicateExpressions.StringLocalizedStandardContains<Root, Other>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/stringlocalizedstandardcontains\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/stringlocalizedstandardcontains","title":"PredicateExpressions.StringLocalizedStandardContains","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/typecheck\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.TypeCheck<Input, Desired>.Variable<T>, with: PredicateExpressions.TypeCheck<Input, Desired>.Variable<T>) -> PredicateExpressions.TypeCheck<Input, Desired>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/typecheck\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/typecheck","title":"PredicateExpressions.TypeCheck","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/unaryminus\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.UnaryMinus<Wrapped>.Variable<T>, with: PredicateExpressions.UnaryMinus<Wrapped>.Variable<T>) -> PredicateExpressions.UnaryMinus<Wrapped>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/unaryminus\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/unaryminus","title":"PredicateExpressions.UnaryMinus","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/value\/replacing(_:with:)","title":"func replacing<T>(Self.Variable<T>, with: Self.Variable<T>) -> Self","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/value\/variablereplacingleaf-implementations","title":"VariableReplacingLeaf Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/value","title":"PredicateExpressions.Value","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/variable\/replacing(_:with:)","title":"func replacing<T>(PredicateExpressions.Variable<Output>.Variable<T>, with: PredicateExpressions.Variable<Output>.Variable<T>) -> PredicateExpressions.Variable<Output>","type":"method"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/variable\/variablereplacing-implementations","title":"VariableReplacing Implementations","type":"symbol"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions\/variable","title":"PredicateExpressions.Variable","type":"extension"}],"path":"\/documentation\/compoundpredicate\/foundation\/predicateexpressions","title":"PredicateExpressions","type":"extension"}],"path":"\/documentation\/compoundpredicate\/foundation","title":"Foundation","type":"extension"}],"path":"\/documentation\/compoundpredicate","title":"CompoundPredicate","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}